# Generated by Django 5.1.7 on 2025-03-23 01:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Team Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('team_type', models.CharField(choices=[('MEDICAL', 'Medical Response'), ('FIRST_RESPONSE', 'First Response'), ('SEARCH_RESCUE', 'Search and Rescue'), ('EVACUATION', 'Evacuation'), ('HAZMAT', 'Hazardous Materials'), ('LOGISTICS', 'Logistics Support'), ('GENERAL', 'General Purpose')], default='GENERAL', max_length=50, verbose_name='Team Type')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('DEPLOYED', 'Deployed'), ('STANDBY', 'Standby'), ('OFF_DUTY', 'Off Duty'), ('TRAINING', 'Training')], default='STANDBY', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('current_assignment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Current Assignment')),
                ('equipment', models.JSONField(blank=True, default=list, verbose_name='Equipment')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Location')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('leader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_teams', to=settings.AUTH_USER_MODEL, verbose_name='Team Leader')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('LEADER', 'Team Leader'), ('DEPUTY', 'Deputy Leader'), ('SPECIALIST', 'Specialist'), ('MEMBER', 'Team Member'), ('TRAINEE', 'Trainee')], default='MEMBER', max_length=20, verbose_name='Role')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ON_CALL', 'On Call'), ('OFF_DUTY', 'Off Duty'), ('ON_LEAVE', 'On Leave')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Joined At')),
                ('specialization', models.CharField(blank=True, max_length=100, verbose_name='Specialization')),
                ('certifications', models.JSONField(blank=True, default=list, verbose_name='Certifications')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team', verbose_name='Team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'ordering': ['team', 'role', 'joined_at'],
                'unique_together': {('team', 'user')},
            },
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(related_name='teams', through='teams.TeamMember', to=settings.AUTH_USER_MODEL, verbose_name='Team Members'),
        ),
    ]
