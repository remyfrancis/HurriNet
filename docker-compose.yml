version: "3.8"

services:
  db:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: hurrinet_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yadmon13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && daphne -b 0.0.0.0 -p 8000 hurrinet.asgi:application"
    volumes:
      - ./backend/hurrinet:/app/hurrinet
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=hurrinet.settings
      - POSTGRES_DB=hurrinet_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yadmon13
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    ports:
      - "80:80"
    depends_on:
      web:
        condition: service_healthy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data:
